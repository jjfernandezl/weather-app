version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: weather-backend-dev
    ports:
      - "${BACKEND_PORT}:${BACKEND_INTERNAL_PORT}"
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=true
      - PORT=${BACKEND_INTERNAL_PORT}
      - HOST=0.0.0.0
    volumes:
      # Mount source code for development hot-reload
      - ./backend:/app
      - /app/__pycache__
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_INTERNAL_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: weather-frontend-dev
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

networks:
  weather-network:
    driver: bridge
    name: weather-network

volumes:
  backend_cache:
    driver: local
