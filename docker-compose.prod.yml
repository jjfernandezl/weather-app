version: '3.8'

services:
  # Backend Service - Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: weather-backend-prod
    ports:
      - "${BACKEND_PORT}:${BACKEND_INTERNAL_PORT}"
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - PORT=${BACKEND_INTERNAL_PORT}
      - HOST=0.0.0.0
    secrets:
      - openweather_api_key
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_INTERNAL_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Frontend Service - Production
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: weather-frontend-prod
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - weather-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

networks:
  weather-network:
    driver: bridge
    name: weather-network-prod

secrets:
  openweather_api_key:
    file: ./secrets/openweather_api_key.txt

volumes:
  nginx_cache:
    driver: local
